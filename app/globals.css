@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    :root {
        /* Light Mode Palette - background adjusted to a lighter off-white */
        --background: 0 0% 98%; /* Lighter off-white */
        --foreground: 0 0% 0%;   /* Black */
        --card: 0 0% 98%;       /* Match background */
        --card-foreground: 0 0% 0%;
        --popover: 0 0% 98%;    /* Match background */
        --popover-foreground: 0 0% 0%;

        /* Primary colors (used as a base for button styling, but specific hex will override) */
        --primary: 0 0% 8%; 
        --primary-foreground: 0 0% 95%;

        --secondary: 0 0% 92%; 
        --secondary-foreground: 0 0% 0%;
        --muted: 0 0% 96%; 
        --muted-foreground: 0 0% 35%; 

        --accent: #1700FE; /* Specific Blue from user */
        --accent-foreground: 0 0% 100%; /* White for text on this blue if needed */
        --accent-green: #37BE5A; /* Specific Green from user */

        --destructive: 0 100% 50%;
        --destructive-foreground: 0 0% 100%;
        --border: 0 0% 15%; 
        --input: 0 0% 100%; /* White - will be button BG */
        --ring: #1700FE; /* Specific Blue for focus rings */
        
        --radius: 0rem;
    }
}

@layer base {
    html {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
        @apply bg-background text-foreground;
        /* Ensure smooth scrolling if not already default */
        scroll-behavior: smooth;
    }
    body {
        /* The grain effect will be on the body's pseudo-element */
        min-height: 100vh;
    }
    body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.75' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
        opacity: 0.03; /* Adjusted for potentially lighter bg */
        pointer-events: none; 
        z-index: -1; 
    }

    h1,h2,h3,h4,h5,h6 {
      font-weight: bold;
      /* text-wrap: balance; /* Consider applying this more selectively if needed */
    }
}

.skeleton {
    * {
        pointer-events: none !important;
    }

    *[class^="text-"] {
        color: transparent;
        @apply rounded-md bg-foreground/20 select-none animate-pulse;
    }

    .skeleton-bg {
        @apply bg-foreground/10;
    }

    .skeleton-div {
        @apply bg-foreground/20 animate-pulse;
    }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Hero card swipe animations for vertical movement */
@keyframes snap-back {
  from {
    transform: translateY(var(--snap-delta, 0));
  }
  to {
    transform: translateY(0);
  }
}

.snap-back-animation {
  animation: snap-back 0.2s ease-out forwards;
}

/* Ensure the image container can hold positioned elements and clip overflow */
.example-card-image-container {
  position: relative;
  overflow: hidden; /* This is important to clip the outgoing/incoming images */
}

/* Hero Card Flip Animations */
.perspective-container {
  perspective: 1200px;
  display: flex; /* Added to help center flipper if its width is not 100% */
  justify-content: center; /* Added */
  align-items: center; /* Added */
  width: 100%; /* Ensure it takes width for aspect ratio calculation */
}

.card-flipper {
  position: relative;
  width: 100%; /* Takes full width of its column in the grid/flex parent */
  /* height will be determined by aspect-ratio inline style */
  transform-style: preserve-3d;
  transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.card-flipper.is-flipped.swipe-left {
  transform: rotateY(-180deg);
}

.card-flipper.is-flipped.swipe-right {
  transform: rotateY(180deg);
}

.card-face {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex; /* For aligning content (like placeholders) within the face */
  justify-content: center;
  align-items: center;
  overflow: hidden; /* Prevent content spill */
  /* border-radius: inherit; */ /* Hero images already have rounded-lg */
}

.card-face img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: contain;
  /* border-radius: inherit; */
}

.card-front {
  /* z-index: 2; /* Usually not needed with backface-visibility */
}

.card-back {
  transform: rotateY(180deg);
}

/* Animation for the current card sliding OUT to the TOP */
.slide-out-to-top-animation {
  animation: slide-out-to-top 0.3s ease-in-out forwards;
}
@keyframes slide-out-to-top {
  from { transform: translateY(0); }
  to { transform: translateY(-120%); }
}

/* Animation for the current card sliding OUT to the BOTTOM */
.slide-out-to-bottom-animation {
  animation: slide-out-to-bottom 0.3s ease-in-out forwards;
}
@keyframes slide-out-to-bottom {
  from { transform: translateY(0); }
  to { transform: translateY(120%); }
}

/* Animation for the next card sliding IN from the BOTTOM */
.slide-in-from-bottom-animation {
  animation: slide-in-from-bottom 0.3s ease-in-out forwards;
}
@keyframes slide-in-from-bottom {
  from { transform: translateY(120%); } /* Starts below with 20% gap */
  to { transform: translateY(0); }
}

/* Animation for the next card sliding IN from the TOP */
.slide-in-from-top-animation {
  animation: slide-in-from-top 0.3s ease-in-out forwards;
}
@keyframes slide-in-from-top {
  from { transform: translateY(-120%); } /* Starts above with 20% gap */
  to { transform: translateY(0); }
}

/* Button click effect */
.hero-nav-button {
  position: relative;
  overflow: hidden;
}

.hero-nav-button::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, rgba(0, 0, 0, 0.1) 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.5s, opacity 1s;
}

.hero-nav-button:active::after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
}
